// Copyright 2020 Ben L. Titzer. All rights reserved.
// See LICENSE for details of Apache 2.0 license.

// Representation of a function's code.
class Code(code: Array<byte>) {
	var orig: Array<byte> = code;	// wasm bytecode
	var sidetable = NO_SIDETABLE;	// sidetable, including control transfers
	var num_locals: int;
	var abs_start: int;
	var target_code: TargetCode;

	def probeAt(offset: int) -> this {
		// "orig" will become a copy of the original code, to allow in-place modification of old code
		if (code == orig) orig = Arrays.dup(orig);
		code[offset] = InternalOpcode.PROBE.code;
	}
	def unprobeAt(offset: int) -> this {
		if (code == orig) return;
		code[offset] = orig[offset];
	}
	def reset() -> this {
		if (code == orig) return;
		ArrayUtil.copyInto(code, 0, orig, 0, orig.length);
		orig = code;
	}
}
def NO_SIDETABLE = Array<int>.new(0);
